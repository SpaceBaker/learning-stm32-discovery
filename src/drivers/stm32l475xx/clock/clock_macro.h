#ifndef __CLOCK_MACRO_H
#define __CLOCK_MACRO_H


#include "../stm32l4xx.h"


/* OSCILLATOR START --------------------------------------------------*/
#define MSI_ON()     ATOMIC_SET_BIT(RCC->CR, RCC_CR_MSION);
#define LSI_ON()     ATOMIC_SET_BIT(RCC->CSR, RCC_CSR_LSION);
#define HSI_ON()     ATOMIC_SET_BIT(RCC->CR, RCC_CR_HSION);
#define LSE_ON()     ATOMIC_SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
#define HSE_ON()     ATOMIC_SET_BIT(RCC->CR, RCC_CR_HSEON);
#define PLL_ON()     ATOMIC_SET_BIT(RCC->CR, RCC_CR_PLLON);
#define PLLSAI1_ON() ATOMIC_SET_BIT(RCC->CR, RCC_CR_PLLSAI1ON);
#define PLLSAI2_ON() ATOMIC_SET_BIT(RCC->CR, RCC_CR_PLLSAI2ON);

/* OSCILLATOR STOP --------------------------------------------------*/
#define MSI_OFF()     ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_MSION);
#define LSI_OFF()     ATOMIC_CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
#define HSI_OFF()     ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_HSION);
#define LSE_OFF()     ATOMIC_CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
#define HSE_OFF()     ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
#define PLL_OFF()     ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
#define PLLSAI1_OFF() ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_PLLSAI1ON);
#define PLLSAI2_OFF() ATOMIC_CLEAR_BIT(RCC->CR, RCC_CR_PLLSAI2ON);

/* PLL OUTPUT CLOCK ENABLE --------------------------------------------------*/
#define PLL_SYS_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLREN);
#define PLL_SAI1_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1PEN);
#define PLL_SAI2_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2PEN);
#define PLL_SAI3_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN);
#define PLL_48M1_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN);
#define PLL_48M2_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1QEN);
#define PLL_ADC1_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1REN);
#define PLL_ADC2_CLK_ENABLE() ATOMIC_SET_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2REN);

/* PLL OUTPUT CLOCK DISABLE --------------------------------------------------*/
#define PLL_CLK_DISABLE()      ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLREN);
#define PLL_SAI1_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1PEN);
#define PLL_SAI2_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2PEN);
#define PLL_SAI3_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN);
#define PLL_48M1_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN);
#define PLL_48M2_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1QEN);
#define PLL_ADC1_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLSAI1CFGR, RCC_PLLSAI1CFGR_PLLSAI1REN);
#define PLL_ADC2_CLK_DISABLE() ATOMIC_SET_BIT(RCC->PLLSAI2CFGR, RCC_PLLSAI2CFGR_PLLSAI2REN);

/* PERIPH CLOCK ENABLE --------------------------------------------------*/
#define LPTIM1_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_LPTIM1EN)
#define LPTIM2_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR2, RCC_APB1ENR2_LPTIM2EN)
#define TIM1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM1EN)
#define TIM2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM2EN)
#define TIM3_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM3EN)
#define TIM4_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM4EN)
#define TIM5_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM5EN)
#define TIM6_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM6EN)
#define TIM7_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM7EN)
#define TIM8_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM8EN)
#define TIM15_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM15EN)
#define TIM16_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM16EN)
#define TIM17_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM17EN)
#define RTC_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN)
// #define LCD_CLK_ENABLE() ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_LCDEN
// #define RTCAPB_CLK_ENABLE() ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_RTCAPBEN
#define WWDG_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_WWDGEN)
#define SPI1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SPI1EN)
#define SPI2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_SPI2EN)
#define SPI3_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_SPI3EN)
#define LPUART1_CLK_ENABLE() ATOMIC_SET_BIT(RCC->APB1ENR2, RCC_APB1ENR2_LPUART1EN)
#define USART1_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN)
#define USART2_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_USART2EN)
#define USART3_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_USART3EN)
#define UART4_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_UART4EN)
#define UART5_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_UART5EN)
#define I2C1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C1EN)
#define I2C2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C2EN)
#define I2C3_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C3EN)
// #define I2C4_CLK_DISABLE()  ATOMIC_SET_BIT(RCC->APB1ENR2, RCC_APB1ENR2_I2C4EN
// #define CRS_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CRS1EN
#define CAN1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CAN1EN)
// #define CAN2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CAN2EN
#define PWR_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_PWREN)
#define DAC1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_DAC1EN)
#define OPAMP_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->APB1ENR1, RCC_APB1ENR1_OPAMPEN)
#define SWPMI1_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB1ENR2, RCC_APB1ENR2_SWPMI1EN)
#define SYSCFG_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN)
#define FW_CLK_ENABLE()      ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_FWEN)
#define SDMMC1_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SDMMC1EN)
#define SAI1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SAI1EN)
#define SAI2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SAI2EN)
#define DMA1_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA1EN)
#define DMA2_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2EN)
// #define DMA2D_CLK_ENABLE() ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2DEN
#define FLASH_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_FLASHEN)
#define CRC_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_CRCEN)
#define TSC_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_TSCEN)
#define GPIOA_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOAEN)
#define GPIOB_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOBEN)
#define GPIOC_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOCEN)
#define GPIOD_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIODEN)
#define GPIOE_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOEEN)
#define GPIOF_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOFEN)
#define GPIOG_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOGEN)
#define GPIOH_CLK_ENABLE()   ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOHEN)
#define ADC_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_ADCEN)
#define RNG_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_RNGEN)
// #define HASH_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_HASHEN
// #define AES_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_AESEN
// #define DCMI_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_DCMIEN
// #define OTG_CLK_ENABLE()  ATOMIC_SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_OTGEN
#define QSPI_CLK_ENABLE()    ATOMIC_SET_BIT(RCC->AHB3ENR, RCC_AHB3ENR_QSPIEN)
#define FMC_CLK_ENABLE()     ATOMIC_SET_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN)

/* PERIPH CLOCK DISABLE --------------------------------------------------*/
#define LPTIM1_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_LPTIM1EN)
#define LPTIM2_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR2, RCC_APB1ENR2_LPTIM2EN)
#define TIM1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM1EN)
#define TIM2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM2EN)
#define TIM3_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM3EN)
#define TIM4_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM4EN)
#define TIM5_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM5EN)
#define TIM6_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM6EN)
#define TIM7_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_TIM7EN)
#define TIM8_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM8EN)
#define TIM15_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM15EN)
#define TIM16_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM16EN)
#define TIM17_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_TIM17EN)
#define RTC_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN)
// #define LCD_CLK_DISABLE() ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_LCDEN
// #define RTCAPB_CLK_DISABLE() ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_RTCAPBEN
#define WWD_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_WWDGEN)
#define SPI1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_SPI1EN)
#define SPI2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_SPI2EN)
#define SPI3_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_SPI3EN)
#define LPUART1_CLK_DISABLE() ATOMIC_CLEAR_BIT(RCC->APB1ENR2, RCC_APB1ENR2_LPUART1EN)
#define USART1_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN)
#define USART2_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_USART2EN)
#define USART3_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_USART3EN)
#define UART4_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_UART4EN)
#define UART5_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_UART5EN)
#define I2C1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C1EN)
#define I2C2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C2EN)
#define I2C3_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_I2C3EN)
// #define I2C4_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR2, RCC_APB1ENR2_I2C4EN
// #define CRS_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CRS1EN
#define CAN1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CAN1EN)
// #define CAN2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_CAN2EN
#define PWR_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_PWREN)
#define DAC1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_DAC1EN)
#define OPAMP_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->APB1ENR1, RCC_APB1ENR1_OPAMPEN)
#define SWPMI1_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB1ENR2, RCC_APB1ENR2_SWPMI1EN)
#define SYSCFG_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN)
#define FW_CLK_DISABLE()      ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_FWEN)
#define SDMMC1_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_SDMMC1EN)
#define SAI1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_SAI1EN)
#define SAI2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->APB2ENR, RCC_APB2ENR_SAI2EN)
#define DMA1_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA1EN)
#define DMA2_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2EN)
// #define DMA2D_CLK_DISABLE() ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2DEN
#define FLASH_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_FLASHEN)
#define CRC_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_CRCEN)
#define TSC_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->AHB1ENR, RCC_AHB1ENR_TSCEN)
#define GPIOA_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOAEN)
#define GPIOB_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOBEN)
#define GPIOC_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOCEN)
#define GPIOD_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIODEN)
#define GPIOE_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOEEN)
#define GPIOF_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOFEN)
#define GPIOG_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOGEN)
#define GPIOH_CLK_DISABLE()   ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_GPIOHEN)
#define ADC_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_ADCEN)
#define RNG_CLK_DISABLE()     ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_RNGEN)
// #define HASH_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_HASHEN
// #define AES_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_AESEN
// #define DCMI_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_DCMIEN
// #define OTG_CLK_DISABLE()  ATOMIC_CLEAR_BIT(RCC->AHB2ENR, RCC_AHB2ENR_OTGEN
#define QSPI_CLK_DISABLE()    ATOMIC_CLEAR_BIT(RCC->AHB3ENR, RCC_AHB3ENR_QSPIEN)

/* PERIPH CLOCK RESET --------------------------------------------------*/
#define LPTIM1_CLK_RESET()  do{\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_LPTIM1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_LPTIM1RST);\
    } while(0)
#define LPTIM2_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_LPTIM2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_LPTIM2RST);\
    } while(0)
#define TIM1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM1RST);\
    } while(0)
#define TIM2_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM2RST);\
    } while(0)
#define TIM3_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM3RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM3RST);\
    } while(0)
#define TIM4_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM4RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM4RST);\
    } while(0)
#define TIM5_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM5RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM5RST);\
    } while(0)
#define TIM6_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM6RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM6RST);\
    } while(0)
#define TIM7_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM7RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_TIM7RST);\
    } while(0)
#define TIM8_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM8RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM8RST);\
    } while(0)
#define TIM15_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM15RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM15RST);\
    } while(0)
#define TIM16_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM16RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM16RST);\
    } while(0)
#define TIM17_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM17RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_TIM17RST);\
    } while(0)
#define RTC_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->BDCRRSTRCC_BDCR_RTCRST);\
        ATOMIC_CLEAR_BIT(RCC->BDCRRSTRCC_BDCR_RTCRST);\
    } while(0)
// #define LCD_CLK_RESET() do {
//     ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_LCDRST);
//     ATOMCLEARSET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_LCDRST);
// } while(0)
// #define RTCAPB_CLK_RESET() do {
//     ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_RTCAPBRST);
//     ATOMCLEARSET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_RTCAPBRST);
// } while(0)
#define SPI1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SPI1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SPI1RST);\
    } while(0)
#define SPI2_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_SPI2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_SPI2RST);\
    } while(0)
#define SPI3_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_SPI3RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_SPI3RST);\
    } while(0)
#define LPUART1_CLK_RESET() do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_LPUART1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_LPUART1RST);\
    } while(0)
#define USART1_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_USART1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_USART1RST);\
    } while(0)
#define USART2_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_USART2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_USART2RST);\
    } while(0)
#define USART3_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_USART3RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_USART3RST);\
    } while(0)
#define UART4_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_UART4RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_UART4RST);\
    } while(0)
#define UART5_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_UART5RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_UART5RST);\
    } while(0)
#define I2C1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C1RST);\
    } while(0)
#define I2C2_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C2RST);\
    } while(0)
#define I2C3_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C3RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_I2C3RST);\
    } while(0)
// #define I2C4_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_I2C4RST);
//     ATOMCLEARSET_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_I2C4RST);
// } while(0)
// #define CRS_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CRS1RST);
//     ATOMCLEARSET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CRS1RST);
// } while(0)
#define CAN1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CAN1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CAN1RST);\
    } while(0)
// #define CAN2_CLK_RESET()    do {
//         ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CAN2RST);
//         ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_CAN2RST);
//     } while(0)
#define PWR_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_PWRRST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_PWRRST);\
    } while(0)
#define DAC1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_DAC1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_DAC1RST);\
    } while(0)
#define OPAMP_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_OPAMPRST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR1, RCC_APB1RSTR1_OPAMPRST);\
    } while(0)
#define SWPMI1_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_SWPMI1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB1RSTR2, RCC_APB1RSTR2_SWPMI1RST);\
    } while(0)
#define SYSCFG_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SYSCFGRST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SYSCFGRST);\
    } while(0)
#define SDMMC1_CLK_RESET()  do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SDMMC1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SDMMC1RST);\
    } while(0)
#define SAI1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SAI1RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SAI1RST);\
    } while(0)
#define SAI2_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SAI2RST);\
        ATOMIC_CLEAR_BIT(RCC->APB2RSTR, RCC_APB2RSTR_SAI2RST);\
    } while(0)
#define DMA1_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA1RST);\
        ATOMIC_CLEAR_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA1RST);\
    } while(0)
#define DMA2_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA2RST);\
        ATOMIC_CLEAR_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA2RST);\
    } while(0)
// #define DMA2D_CLK_RESET() do {
//     ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA2DRST);
//     ATOMCLEARSET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_DMA2DRST);
// } while(0)
#define FLASH_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_FLASHRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_FLASHRST);\
    } while(0)
#define CRC_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_CRCRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_CRCRST);\
    } while(0)
#define TSC_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_TSCRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB1RSTR, RCC_AHB1RSTR_TSCRST);\
    } while(0)
#define GPIOA_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOARST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOARST);\
    } while(0)
#define GPIOB_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOBRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOBRST);\
    } while(0)
#define GPIOC_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOCRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOCRST);\
    } while(0)
#define GPIOD_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIODRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIODRST);\
    } while(0)
#define GPIOE_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOERST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOERST);\
    } while(0)
#define GPIOF_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOFRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOFRST);\
    } while(0)
#define GPIOG_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOGRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOGRST);\
    } while(0)
#define GPIOH_CLK_RESET()   do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOHRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_GPIOHRST);\
    } while(0)
#define ADC_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_ADCRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_ADCRST);\
    } while(0)
#define RNG_CLK_RESET()     do {\
        ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_RNGRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_RNGRST);\
    } while(0)
// #define HASH_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_HASHRST);
//     ATOMCLEARSET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_HASHRST);
// } while(0)
// #define AES_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_AESRST);
//     ATOMCLEARSET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_AESRST);
// } while(0)
// #define DCMI_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_DCMIRST);
//     ATOMCLEARSET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_DCMIRST);
// } while(0)
// #define OTG_CLK_RESET()  do {
//     ATOMIC_SET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_OTGRST);
//     ATOMCLEARSET_BIT(RCC->AHB2RSTR, RCC_AHB2RSTR_OTGRST);
// } while(0)
#define QSPI_CLK_RESET()    do {\
        ATOMIC_SET_BIT(RCC->AHB3RSTR, RCC_AHB3RSTR_QSPIRST);\
        ATOMIC_CLEAR_BIT(RCC->AHB3RSTR, RCC_AHB3RSTR_QSPIRST);\
    } while(0)


#endif // __CLOCK_MACRO_
